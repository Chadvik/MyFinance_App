// Mocks generated by Mockito 5.4.5 from annotations
// in my_finance/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_finance/models/category.dart' as _i4;
import 'package:my_finance/models/transaction.dart' as _i3;
import 'package:my_finance/providers/finance_provider.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FinanceProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinanceProvider extends _i1.Mock implements _i2.FinanceProvider {
  MockFinanceProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Transaction> get transactions =>
      (super.noSuchMethod(
            Invocation.getter(#transactions),
            returnValue: <_i3.Transaction>[],
          )
          as List<_i3.Transaction>);

  @override
  List<_i4.Category> get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: <_i4.Category>[],
          )
          as List<_i4.Category>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> loadData({String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#loadData, [], {#userId: userId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addTransaction(
    _i3.Transaction? transaction, {
    String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addTransaction,
              [transaction],
              {#userId: userId},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateTransaction(
    _i3.Transaction? transaction, {
    String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateTransaction,
              [transaction],
              {#userId: userId},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTransaction(int? id, {String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTransaction, [id], {#userId: userId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addCategory(_i4.Category? category, {String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#addCategory, [category], {#userId: userId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateCategory(_i4.Category? category, {String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#updateCategory, [category], {#userId: userId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteCategory(int? id, {String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCategory, [id], {#userId: userId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  double getTotalIncome(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(
            Invocation.method(#getTotalIncome, [start, end]),
            returnValue: 0.0,
          )
          as double);

  @override
  double getTotalExpenses(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(
            Invocation.method(#getTotalExpenses, [start, end]),
            returnValue: 0.0,
          )
          as double);

  @override
  Map<String, double> getSpendingByCategory(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(
            Invocation.method(#getSpendingByCategory, [start, end]),
            returnValue: <String, double>{},
          )
          as Map<String, double>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
